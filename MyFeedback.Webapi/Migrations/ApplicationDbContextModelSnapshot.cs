// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MyFeedback.Webapi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MyFeedback.Webapi.Models.Areas.Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<long>("EmpresaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("MyFeedback.Webapi.Models.Colaboradores.Colaborador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<long>("FuncaoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("FuncaoId");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("MyFeedback.Webapi.Models.Empresas.Empresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Site")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("MyFeedback.Webapi.Models.Feedbacks.Feedback", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("ColaboradorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<int>("Nota")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("MyFeedback.Webapi.Models.Funcoes.Funcao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Funcoes");
                });

            modelBuilder.Entity("MyFeedback.Webapi.Models.Areas.Area", b =>
                {
                    b.HasOne("MyFeedback.Webapi.Models.Empresas.Empresa", "Empresa")
                        .WithMany("Areas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("MyFeedback.Webapi.Models.Colaboradores.Colaborador", b =>
                {
                    b.HasOne("MyFeedback.Webapi.Models.Areas.Area", "Area")
                        .WithMany("Colaboradores")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyFeedback.Webapi.Models.Funcoes.Funcao", "Funcao")
                        .WithMany("Colaboradores")
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Funcao");
                });

            modelBuilder.Entity("MyFeedback.Webapi.Models.Feedbacks.Feedback", b =>
                {
                    b.HasOne("MyFeedback.Webapi.Models.Colaboradores.Colaborador", "Colaborador")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("MyFeedback.Webapi.Models.Areas.Area", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("MyFeedback.Webapi.Models.Colaboradores.Colaborador", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("MyFeedback.Webapi.Models.Empresas.Empresa", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("MyFeedback.Webapi.Models.Funcoes.Funcao", b =>
                {
                    b.Navigation("Colaboradores");
                });
#pragma warning restore 612, 618
        }
    }
}
